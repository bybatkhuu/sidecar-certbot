{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation","text":"<ul> <li>Build docker image</li> <li>Certbot examples</li> </ul>"},{"location":"certbot-examples/","title":"Certbot examples","text":""},{"location":"certbot-examples/#dns-cloudflare-wildcard-subdomain","title":"DNS CloudFlare (wildcard subdomain)","text":"<pre><code># Obtain certificates:\ncertbot certonly -n --agree-tos --keep --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -m user@email.com -d example.com,*.example.com\n\n# Renew certificates:\ncertbot renew -n --keep --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini\n</code></pre>"},{"location":"certbot-examples/#test-dns-cloudflare-wildcard-subdomain","title":"TEST - DNS CloudFlare (wildcard subdomain)","text":"<pre><code># Obtain certificates:\ncertbot certonly --staging -n --agree-tos --force-renewal --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -m user@email.com -d example.com,*.example.com\n\n# Renew certificates:\ncertbot renew --staging -n --force-renewal --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini\n</code></pre>"},{"location":"certbot-examples/#webroot-multiple-subdomains","title":"Webroot (multiple subdomains)","text":"<pre><code># Obtain certificates:\ncertbot certonly -n --agree-tos --keep --webroot -w /var/www -m user@email.com -d example.com,www.example.com,api.example.com\n\n# Renew certificates:\ncertbot renew -n --keep --webroot -w /var/www\n</code></pre>"},{"location":"certbot-examples/#interactive-webroot-wildcard-subdomain","title":"[INTERACTIVE] Webroot (wildcard subdomain)","text":"<pre><code># Obtain certificates:\ncertbot certonly --agree-tos --keep --webroot -w /var/www -m user@email.com -d example.com,*.example.com\n\n# Renew certificates:\ncertbot renew --keep --webroot -w /var/www\n</code></pre>"},{"location":"certbot-examples/#interactive-test-webroot-wildcard-subdomain","title":"[INTERACTIVE] TEST - Webroot (wildcard subdomain)","text":"<pre><code># Obtain certificates:\ncertbot certonly --staging --agree-tos --force-renewal --webroot -w /var/www -m user@email.com -d example.com,*.example.com\n\n# Renew certificates:\ncertbot renew --staging --force-renewal --webroot -w /var/www\n</code></pre>"},{"location":"certbot-examples/#standalone","title":"Standalone","text":"<pre><code># Obtain certificates:\ncertbot certonly -n --agree-tos --keep --standalone -m user@email.com -d example.com,www.example.com\n\n# Renew certificates:\ncertbot renew -n --keep --standalone\n</code></pre>"},{"location":"docker-build/","title":"Build and publish docker image","text":""},{"location":"docker-build/#build-and-push-image","title":"Build and push image","text":"<p>A. [RECOMMENDED] Run <code>build.sh</code> script to build images:</p> <pre><code># Run build script:\n./scripts/build.sh\n\n# -p=PLATFORM, --platform=PLATFORM          Build image type [amd64 | arm64]. Default is current platform.\n# -u, --push-images                         Enable pushing built images to Docker Registry.\n# -c, --clean-images                        Enable clearning leftover images.\n# -x, --cross-compile                       Enable cross compiling.\n# -b=BASE_IMAGE, --base-image=BASE_IMAGE    Base image name. Default is \"ubuntu:22.04\".\n# -g=REGISTRY, --registry=REGISTRY          Docker image registry (docker registry and username). Default is \"bybatkhuu\".\n# -r=REPO, --repo=REPO                      Docker image repository. Default is \"certbot\".\n# -v=VERSION, --version=VERSION             Docker image version. Default read from \"app/__version__.py\" file.\n# -s=SUBTAG, --subtag=SUBTAG                Docker image subtag. Default is \"\".\n\n\n# For example:\n./scripts/build.sh -p=arm64 -u -c\n\n# Or:\n./scripts/build.sh -x\n\n# Or:\n./scripts/build.sh -p=arm64 -b=ubuntu:22.04 -n=bybatkhuu -r=certbot -v=1.0.0 -s=-arm64 -u -c\n</code></pre> <p>B. Or docker build command:</p> <pre><code># Build image:\ndocker build \\\n    [IMG_ARGS] \\\n    --progress plain \\\n    --platform [PLATFORM] \\\n    -t $[IMG_FULLNAME] \\\n    .\n\n# For example:\ndocker build \\\n    --progress plain \\\n    -t bybatkhuu/certbot:latest \\\n    .\n\n# Push image to Docker Registry:\ndocker push [IMG_FULLNAME]\n# For example:\ndocker push bybatkhuu/certbot:latest\n</code></pre> <p>C. Or docker buildx command (cross-compile):</p> <pre><code># Create new builder:\ndocker buildx create --driver docker-container --bootstrap --use --name new_builder\n\n# Build images and push to Docker Registry:\ndocker buildx build \\\n    [IMG_ARGS] \\\n    --progress plain \\\n    --platform linux/amd64,linux/arm64 \\\n    --cache-from=type=registry,ref=[IMG_NAME]:cache-latest \\\n    --cache-to=type=registry,ref=[IMG_NAME]:cache-latest,mode=max \\\n    -t [IMG_FULLNAME] \\\n    --push \\\n    .\n\n# For example:\ndocker buildx build \\\n    --progress plain \\\n    --platform linux/amd64,linux/arm64 \\\n    --cache-from=type=registry,ref=bybatkhuu/certbot:cache-latest \\\n    --cache-to=type=registry,ref=bybatkhuu/certbot:cache-latest,mode=max \\\n    -t bybatkhuu/certbot:latest \\\n    --push \\\n    .\n\n# Remove builder:\ndocker buildx rm -f new_builder\n</code></pre> <p>D. Or docker-compose build command:</p> <pre><code># Build image:\ndocker-compose build\n\n# Push image to Docker Registry:\ndocker-compose push\n</code></pre> <p> </p>"},{"location":"docker-build/#references","title":"References","text":"<ul> <li>https://docs.docker.com/engine/reference/commandline/build</li> <li>https://docs.docker.com/get-started/02_our_app</li> <li>https://docs.docker.com/develop/develop-images/dockerfile_best-practices</li> <li>https://docs.docker.com/language/python/build-images</li> <li>https://codefresh.io/docker-tutorial/build-docker-image-dockerfiles</li> <li>https://learnk8s.io/blog/smaller-docker-images</li> <li>https://phoenixnap.com/kb/docker-image-size</li> <li>https://semaphoreci.com/blog/2016/12/13/lightweight-docker-images-in-5-steps.html</li> <li>https://medium.com/@gdiener/how-to-build-a-smaller-docker-image-76779e18d48a</li> </ul>"},{"location":"scripts/","title":"Script files","text":""}]}