name: 2. Build and Publish

on:
  push:
    tags:
      - "v*.*.*-*"
  pull_request:
    tags:
      - "v*.*.*-*"
  workflow_dispatch:

jobs:
  build_publish:
    name: Build and Publish
    runs-on: ubuntu-22.04
    if: ${{ github.ref_type == 'tag' }}
    permissions:
      contents: read
      actions: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Lint dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up docker buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set version
        run: echo "_VERSION=${GITHUB_REF_NAME#v}" >> ${GITHUB_ENV}
      -
        name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/certbot:cache-latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/certbot:test
      -
        name: Test docker image
        run: docker run --rm -e CERTBOT_EMAIL=test@email.com -e CERTBOT_DOMAINS=example.com ${{ secrets.DOCKERHUB_USERNAME }}/certbot:test /bin/bash "certbot --version"
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/certbot:cache-latest
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/certbot:cache-latest,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/certbot:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/certbot:${{ env._VERSION }}
          push: true
      -
        name: Trigger release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh workflow run 3.create-release.yml -r ${GITHUB_REF_NAME}
